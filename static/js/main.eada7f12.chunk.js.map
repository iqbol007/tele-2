{"version":3,"sources":["components/Tarrif/Tarrif.js","components/Tarriflist/Tarriflist.js","App.js","serviceWorker.js","index.js"],"names":["Tarrif","tele","moon","className","day","rub","price","rowming","classic","forDevices","withOutAmount","title","itsHit","forDay","traffic","unlimInternet","socialMediaInclude","time","withOutLimit","sms","Tarriflist","id","text","unlimOnRus","map","o","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qOAEe,SAASA,EAAT,GAA2B,IAATC,EAAQ,EAARA,KACzBC,EAAO,yBAAKC,UAAU,OAAf,mCACPC,EAAM,yBAAKD,UAAU,OAAf,6BACNE,EAAM,yBAAKF,UAAU,OAAf,UACNG,EAAQ,yBAAKH,UAAU,SAASF,EAAKK,OACrCC,EAAU,sJACVC,EAAU,gHACVC,EAAa,kKACbC,EAAgB,4JACtB,OAAKT,EAAKS,cA0DN,yBAAKP,UAAU,iBACZF,EAAKQ,YAAc,2BAAIA,GACvBR,EAAKO,SAAW,2BAAIA,GACrB,6BACCE,GA5DH,yBAAKP,UAAU,QACb,6BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SAAf,IAAyBF,EAAKU,OAC7BV,EAAKW,QAAU,yBAAKT,UAAU,cAC9BG,EACAD,EACAJ,EAAKY,OAAST,EAAMF,GAEvB,yBAAKC,UAAU,WACb,yBAAKA,UAAU,gBACZF,EAAKa,QAAU,EACd,oCACE,2BAAIb,EAAKa,SACT,+CAGF,oCACIb,EAAKc,cAML,yBAAKZ,UAAU,YAAf,uHALA,2BACkB,IAAfF,EAAKa,QACN,gDAOR,6BACA,8BACGb,EAAKe,oBAAsB,uGAG/Bf,EAAKe,oBAAsB,yBAAKb,UAAU,cAC1CF,EAAKM,SAAWA,GAEnB,yBAAKJ,UAAU,WACb,yBAAKA,UAAU,QACE,IAAdF,EAAKgB,MACJ,oCACE,2BAAIhB,EAAKgB,MADX,wBAKJ,yBAAKd,UAAU,gBACU,KAAtBF,EAAKiB,cAAuBjB,EAAKiB,gBAIxC,yBAAKf,UAAU,WACC,IAAbF,EAAKkB,KAAa,yBAAKhB,UAAU,OAAOF,EAAKkB,IAA3B,SC5Dd,SAASC,IAiMtB,OACE,oCAjMc,CACd,CACEC,GAAI,EACJV,MAAO,2DACPL,MAAO,IACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,GACLH,oBAAoB,EACpBO,YAAY,EACZhB,SAAS,EACTO,QAAS,GACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,sEACPL,MAAO,IACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,EACLI,YAAY,EACZhB,SAAS,EACTS,oBAAoB,EACpBF,QAAS,GACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,0DACPL,MAAO,IACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,EACLZ,SAAS,EACTgB,YAAY,EACZP,oBAAoB,EACpBF,QAAS,GACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,sEACPL,MAAO,IACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,EACLZ,SAAS,EACTgB,YAAY,EACZP,oBAAoB,EACpBF,QAAS,EACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,2BACPL,MAAO,EACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,EACNE,IAAK,EACLI,YAAY,EACZhB,SAAS,EACTS,oBAAoB,EACpBF,QAAS,EACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,mDACPL,MAAO,IACPY,aAAc,mHACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,GACLI,YAAY,EACZhB,SAAS,EACTS,oBAAoB,EACpBF,QAAS,EACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,6CACPL,MAAO,KACPY,aAAc,GACdI,KAAM,8JACNL,KAAM,IACNE,IAAK,IACLI,YAAY,EACZhB,SAAS,EACTS,oBAAoB,EACpBF,QAAS,GACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,0DACPL,MAAO,EACPY,aAAc,GACdI,KAAM,8JACNL,KAAM,EACNE,IAAK,EACLH,oBAAoB,EACpBT,SAAS,EACTgB,YAAY,EACZT,QAAS,EACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,EACJV,MAAO,2EACPL,MAAO,EACPY,aAAc,GACdI,KAAM,8JACNL,KAAM,EACNE,IAAK,EACLI,YAAY,EACZP,oBAAoB,EACpBT,SAAS,EACTO,QAAS,EACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,GAEV,CACEQ,GAAI,GACJV,MAAO,qGACPL,MAAO,IACPY,aAAc,GACdI,KAAM,8JACNL,KAAM,GACNE,IAAK,IACLI,YAAY,EACZP,oBAAoB,EACpBT,SAAS,EACTO,QAAS,GACTF,QAAQ,EACRG,eAAe,EACfL,eAAe,EACfF,SAAS,EACTC,YAAY,EACZI,QAAQ,IAKCW,KAAI,SAAAC,GAAC,OACZ,kBAACzB,EAAD,CAAQC,KAAMwB,QC1LPC,MATf,WAEE,OACC,oCACA,yBAAKvB,UAAU,OAAM,yBAAKA,UAAU,QAAf,UACtB,kBAACiB,EAAD,QCGkBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.eada7f12.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Tarrif({ tele }) {\n  const moon = <div className=\"mon\">/Месяц</div>;\n  const day = <div className=\"mon\">/День</div>;\n  const rub = <div className=\"rub\">₽</div>;\n  const price = <div className=\"price\">{tele.price}</div>;\n  const rowming = <>ИНТЕРНЕТ ЗА ГРАНИЦЕЙ</>;\n  const classic = <>Классический</>;\n  const forDevices = <>Интернет для устройств</>;\n  const withOutAmount = <>Без абонентской платы</>;\n  if (!tele.withOutAmount) {\n    return (\n      <div className=\"main\">\n        <div>\n          <div className=\"block-1\">\n            <div className=\"title\"> {tele.title}</div>\n            {tele.itsHit && <div className=\"image-hit\"></div>}\n            {price}\n            {rub}\n            {tele.forDay ? day : moon}\n          </div>\n          <div className=\"block-2\">\n            <div className=\"traffic-size\">\n              {tele.traffic > 1 ? (\n                <>\n                  <b>{tele.traffic}</b>\n                  <span>ГБ</span>\n                </>\n              ) : (\n                <>\n                  {!tele.unlimInternet ? (\n                    <b>\n                      {tele.traffic * 1000}\n                      <span>МБ</span>\n                    </b>\n                  ) : (\n                    <div className=\"internet\">БЕЗЛИМИТНЫЙ ИНТЕРНЕТ</div>\n                  )}\n                </>\n              )}\n              <br />\n              <span>\n                {tele.socialMediaInclude && <span>+безлимитные</span>}\n              </span>\n            </div>\n            {tele.socialMediaInclude && <div className=\"img-icons\"></div>}\n            {tele.rowming && rowming}\n          </div>\n          <div className=\"block-3\">\n            <div className=\"time\">\n              {tele.time !== 0 && (\n                <>\n                  <b>{tele.time}</b>мин.\n                </>\n              )}\n            </div>\n            <div className=\"withOutLimit\">\n              {tele.withOutLimit !== \"\" && tele.withOutLimit}\n            </div>\n          </div>\n        </div>\n        <div className=\"block-4\">\n          {tele.sms !== 0 && <div className=\"sms\">{tele.sms}SMS</div>}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"withOutAmount\">\n        {tele.forDevices && <b>{forDevices}</b>}\n        {tele.classic && <b>{classic}</b>}\n        <br />\n        {withOutAmount}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Tarrif from \"../Tarrif/Tarrif\";\n\nexport default function Tarriflist() {\n  const tariffs = [\n    {\n      id: 1,\n      title: \"Мой онлайн+\",\n      price: 500,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 500,\n      sms: 50,\n      socialMediaInclude: true,\n      unlimOnRus: false,\n      rowming: false,\n      traffic: 40,\n      itsHit: true,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 2,\n      title: \"Везде онлайн\",\n      price: 400,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 500,\n      sms: 0,\n      unlimOnRus: false,\n      rowming: false,\n      socialMediaInclude: true,\n      traffic: 15,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 3,\n      title: \"Мой онлайн\",\n      price: 700,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 800,\n      sms: 0,\n      rowming: true,\n      unlimOnRus: false,\n      socialMediaInclude: true,\n      traffic: 30,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 4,\n      title: \"Мой разговор\",\n      price: 200,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 200,\n      sms: 0,\n      rowming: false,\n      unlimOnRus: false,\n      socialMediaInclude: false,\n      traffic: 2,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 5,\n      title: \"Мой Tele2\",\n      price: 7,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 0,\n      sms: 0,\n      unlimOnRus: false,\n      rowming: false,\n      socialMediaInclude: false,\n      traffic: 5,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: true\n    },\n    {\n      id: 6,\n      title: \"Безлимит\",\n      price: 650,\n      withOutLimit: \"+безлимит на Tele2 в России\",\n      text: \"На остальные номера в В России\",\n      time: 500,\n      sms: 50,\n      unlimOnRus: false,\n      rowming: false,\n      socialMediaInclude: false,\n      traffic: 0,\n      itsHit: false,\n      unlimInternet: true,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 7,\n      title: \"Премиум\",\n      price: 1500,\n      withOutLimit: \"\",\n      text: \"На остальные номера в В России\",\n      time: 2000,\n      sms: 500,\n      unlimOnRus: false,\n      rowming: false,\n      socialMediaInclude: false,\n      traffic: 50,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 8,\n      title: \"Мой онлайн\",\n      price: 0,\n      withOutLimit: \"\",\n      text: \"На остальные номера в В России\",\n      time: 0,\n      sms: 0,\n      socialMediaInclude: false,\n      rowming: false,\n      unlimOnRus: false,\n      traffic: 0,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: true,\n      classic: true,\n      forDevices: false,\n      forDay: false\n    },\n    {\n      id: 9,\n      title: \"Классический\",\n      price: 0,\n      withOutLimit: \"\",\n      text: \"На остальные номера в В России\",\n      time: 0,\n      sms: 0,\n      unlimOnRus: false,\n      socialMediaInclude: false,\n      rowming: false,\n      traffic: 0,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: true,\n      classic: false,\n      forDevices: true,\n      forDay: false\n    },\n    {\n      id: 10,\n      title: \"Интернет для вещей\",\n      price: 100,\n      withOutLimit: \"\",\n      text: \"На остальные номера в В России\",\n      time: 30,\n      sms: 100,\n      unlimOnRus: false,\n      socialMediaInclude: false,\n      rowming: false,\n      traffic: 0.3,\n      itsHit: false,\n      unlimInternet: false,\n      withOutAmount: false,\n      classic: false,\n      forDevices: false,\n      forDay: false\n    }\n  ];\n  return (\n    <>\n      {tariffs.map(o => (\n        <Tarrif tele={o} />\n      ))}\n    </>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Tarriflist from './components/Tarriflist/Tarriflist';\n\nfunction App() {\n\n  return (\n   <>\n   <div className=\"log\"><div className=\"text\">TELE2</div></div>\n  <Tarriflist />\n   </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}